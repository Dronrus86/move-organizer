{"version":3,"sources":["components/Header/Header.js","components/Redux/Reducer.js","components/Redux/Store.js","components/SearchBox/SearchBox.js","components/MovieItem/MovieItem.js","components/Movies/Movies.js","components/Favorites/Favorites.js","pages/MainPage/MainPage.js","pages/ListPage/ListPage.js","App.js","index.js"],"names":["Header","className","Component","initialState","movies","favouriteMovies","reducer","state","action","type","payload","movieList","favourite","myFavouriteMovies","findFavorite","find","item","imdbID","findId","filter","store","createStore","SearchBox","searchLine","searchLineChangeHandler","e","setState","target","value","searchBoxSubmitHandler","preventDefault","fetch","then","response","json","data","Search","dispatch","alert","catch","err","console","log","this","onSubmit","placeholder","onChange","disabled","MovieItem","props","addToFavorites","Title","Year","Poster","src","alt","onClick","Movies","subscribe","getState","map","movie","key","Favorites","listId","disabledInput","showButton","showLink","deleteFromFavorites","favoritesSubmitHandler","favoritesInfo","method","headers","body","JSON","stringify","res","id","style","display","href","MainPage","ListPage","match","params","title","description","forEach","element","push","rel","App","path","exact","component","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba013e05.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css';\n\nexport default class Header extends Component {\n    render() { \n        return (\n            <header className=\"header\">\n                <h1 className=\"header__title\">\n                    MustSee\n                </h1>\n            </header>\n        );\n    }\n}\n","const initialState = {\n    movies: [],\n    favouriteMovies: []\n}\n\nfunction reducer (state = initialState, action) {\n    switch(action.type) {\n        case 'SHOW_MOVIES':\n            return {...state,movies: [...action.payload.movieList]};\n        case 'ADD_MOVIES':\n            const favourite = action.payload.myFavouriteMovies;\n            const findFavorite = state.favouriteMovies.find((item) => item.imdbID === favourite.imdbID);\n            if(!findFavorite) {\n                const favouriteMovies = [...state.favouriteMovies, favourite];\n                return {...state,favouriteMovies};\n            }\n            return state;\n        case 'DELETE_MOVIES':\n            const findId = [...state.favouriteMovies.filter((item)=> item.imdbID !== action.payload.imdbID)];\n            return {...state,favouriteMovies: findId};\n        default:\n          return state;\n      }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './Reducer';\n\nlet store = createStore(reducer);\n\nexport default store;","import React, { Component } from 'react';\nimport store from '../Redux/Store';\nimport './SearchBox.css';\n\nexport default class SearchBox extends Component {\n    state = {\n        searchLine: ''\n    };\n\n    searchLineChangeHandler = (e) => {\n        this.setState({ searchLine: e.target.value });\n    };\n\n    searchBoxSubmitHandler = (e) => {\n        e.preventDefault();\n        fetch(`http://www.omdbapi.com/?s=${this.state.searchLine}&apikey=103381a1`)\n        .then(response => response.json())\n        .then(data => {\n            if(!data.Search) {\n                alert('RESULT: No movies found on request');\n                return;\n            }\n            const movieList = data.Search;\n            store.dispatch({\n                type: 'SHOW_MOVIES',\n                payload: {\n                    movieList: movieList\n                }\n            });\n        })\n        .catch((err) => console.log(err));\n    };\n\n    render() {\n        const { searchLine } = this.state;\n\n        return (\n            <div className=\"search-box\">\n                <form className=\"search-box__form\" onSubmit={this.searchBoxSubmitHandler}>\n                    <label className=\"search-box__form-label\">\n                    Искать фильм по названию:\n                        <input\n                            value={searchLine}\n                            type=\"text\"\n                            className=\"search-box__form-input\"\n                            placeholder=\"Например, Shawshank Redemption\"\n                            onChange={this.searchLineChangeHandler}\n                        />\n                    </label>\n                    <button\n                        type=\"submit\"\n                        className=\"search-box__form-submit\"\n                        disabled={!searchLine}\n                    >\n                        Искать\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport store from '../Redux/Store';\nimport './MovieItem.css';\n\nexport default class MovieItem extends Component {\n    state = { \n        movies: this.props\n    };\n\n    addToFavorites = () => {\n        store.dispatch({\n            type: 'ADD_MOVIES',\n            payload: {\n                myFavouriteMovies: this.props\n            }\n        })\n    };\n\n    render() {\n        const { Title, Year, Poster } = this.props;\n        return (\n            <article className=\"movie-item\">\n                <img className=\"movie-item__poster\" src={Poster} alt={Title} />\n                <div className=\"movie-item__info\">\n                    <h3 className=\"movie-item__title\">{Title}&nbsp;({Year})</h3>\n                    <button onClick={this.addToFavorites} type=\"button\" className=\"movie-item__add-button\">Добавить в список</button>\n                </div>\n            </article>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport MovieItem from '../MovieItem/MovieItem';\nimport store from '../Redux/Store';\nimport './Movies.css';\n\nexport default class Movies extends Component {\n    state = { \n        movies: []\n    };\n\n    componentDidMount() {\n        store.subscribe(() => {\n          const state = store.getState();\n          this.setState({ \n            movies: state.movies\n          });\n        })\n    };\n    \n    render() { \n        return ( \n            <ul className=\"movies\">\n                {this.state.movies.map((movie) => (\n                    <li className=\"movies__item\" key={movie.imdbID}>\n                        <MovieItem {...movie} />\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport store from '../Redux/Store';\nimport './Favorites.css';\n\nexport default class Favorites extends Component {\n    state = {\n        searchLine: '',\n        movies: [],\n        listId: '',\n        disabledInput: false,\n        showButton: 'block',\n        showLink: 'none'\n    };\n\n    componentDidMount() {\n        store.subscribe(() => {\n            const state = store.getState();\n            this.setState({ \n                movies: state.favouriteMovies\n            })\n        })\n    };\n\n    deleteFromFavorites = (item) => {\n        store.dispatch({\n            type: 'DELETE_MOVIES',\n            payload: {\n                imdbID: item\n            }\n        })\n    };\n\n    searchLineChangeHandler = (e) => {\n        this.setState({ searchLine: e.target.value });\n    };\n\n    favoritesSubmitHandler = (e) => {\n        e.preventDefault();\n        const favoritesInfo = {\n            \"title\": this.state.searchLine,\n            \"movies\": this.state.movies.map((item) => {\n                return item.imdbID})\n        };\n        fetch('https://acb-api.algoritmika.org/api/movies/list', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n              },\n            body: JSON.stringify(favoritesInfo)\n        })\n        .then(res => res.json())\n        .then(data => {\n            this.setState({ \n                listId: `http://localhost:3000/list/${data.id}`,\n                disabledInput: true, \n                showButton: 'none',\n                showLink: 'inline-block'\n            });\n        })\n        .catch((err) => console.log(err));\n    };\n \n    render() { \n        const { searchLine, listId, disabledInput, showButton, showLink } = this.state;\n\n        return (\n            <div className=\"favorites\">\n                <form className=\"favorites__form\" onSubmit={this.favoritesSubmitHandler}>\n                \n                    <input\n                        value={searchLine}\n                        type=\"text\"\n                        className=\"favorites__name\" \n                        placeholder=\"Введите название фильма\"\n                        onChange={this.searchLineChangeHandler}\n                        disabled={disabledInput}\n                    />\n                    <ul className=\"favorites__list\">\n                        {this.state.movies.map((item) => {\n                            return <li key={item.imdbID}>{item.Title} ({item.Year})\n                                <span>\n                                    <button \n                                    key={item.imdbID} \n                                    type=\"button\" \n                                    className=\"favorites__delete\" \n                                    onClick={() => this.deleteFromFavorites(item.imdbID)}\n                                    disabled={disabledInput}\n                                >\n                                    &#10008;\n                                    </button>\n                                </span>\n                            </li>;\n                        })}\n                    </ul>\n                    <button \n                        type=\"submit\" \n                        className=\"favorites__save\" \n                        disabled={!searchLine}\n                        style={{ display: showButton }}\n                    >\n                        Сохранить список\n                    </button>\n                    <a style={{ display: showLink }} className=\"favoritesLink\" href={listId}>Перейти к списку</a>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './MainPage.css';\nimport Header from '../../components/Header/Header';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport Movies from '../../components/Movies/Movies';\nimport Favorites from '../../components/Favorites/Favorites';\n\nexport default class MainPage extends Component {\n    render() { \n        return (\n            <div className=\"main-page\">\n                <Header />\n                <main className=\"main-page__content\">\n                    <section className=\"main-page__main-section\">\n                        <div className=\"main-page__search-box\">\n                            <SearchBox />\n                        </div>\n                        <div className=\"main-page__movies\">\n                            <Movies />\n                        </div>\n                    </section>\n                    <aside className=\"main-page__favorites\">\n                        <Favorites />\n                    </aside>\n                </main>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './ListPage.css';\n\nexport default class ListPage extends Component {\n    state = {\n        movies: []\n    };\n\n    componentDidMount() {\n        const id = this.props.match.params.id;\n\n        fetch(`https://acb-api.algoritmika.org/api/movies/list/${id}`)\n        .then(res => res.json())\n        .then(data => {\n            this.setState({ title: data.title });\n            const description = [];\n            data.movies.forEach(element => {\n                fetch(`http://www.omdbapi.com/?i=${element}&apikey=640ec5e5`)\n                .then(res => res.json())\n                .then(data => {\n                    description.push(data);\n                    this.setState({ movies: description })\n                });\n            })\n        })\n        .catch((err) => console.log(err));\n    };\n\n    render() { \n        const { title } = this.state;\n        return (\n            <div className=\"list-page\">\n                <h1 className=\"list-page__title\">{title}</h1>\n                <ul className=\"list__favorites\">\n                    {this.state.movies.map((item) => {\n                        return (\n                            <li key={item.imdbID}>\n                                <a href={'https://www.imdb.com/title/' + item.imdbID} target=\"_blank\" rel=\"noopener noreferrer\">{item.Title} ({item.Year})</a>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/MainPage/MainPage';\nimport ListPage from './pages/ListPage/ListPage';\n\nimport './reset.css';\nimport './common.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Route path=\"/\" exact component={MainPage} />\n        <Route path=\"/list/:id\" exact component={ListPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}